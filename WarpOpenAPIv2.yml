openapi: 3.0.1
info:
  title: "Alor OpenAPI V2"
  description: |
    API для работы с торговой системой АЛОР Брокер. Предоставляет интерфейсы для выставления заявок и получения биржевой информации.
    
    Данные для неавторизованных запросов предоставляются с задержкой от 15 минут, для авторизованных - без задержек. 
    
    Публичная биржевая информация может быть получена через HTTP(S) API, а также доступна через однократно установленное WebSocket соединение. <br>
    **Внимание!** WebSocket соединения могут и будут разрываться *(например, если клиент не успевает обрабатывать сообщения и на стороне API в буфере накопится более 5000 событий)*. <br>
    Во внешнем ПО необходимо предусмотреть механизмы переподключения и переподписки (при необходимости)! <br> <br> 
    В OpenAPI V2 доступны "Московская Биржа" (MOEX) и "Биржа СПБ" (SPBX). 
    
    <h4> Доступные типы данных </h4>
     * Все сделки
     * Все заявки
     * Информация по инструментам
     * Котировки
     * Биржевые стаканы
     * Исторические данные
     * Позиции
     * Информация о клиенте
    
    <h4>Поддерживаемые виды заявок</h4>
     * рыночные
     * лимитные
     * стоп-лосс
     * тейк-профит
     * стоп-лосс лимит
     * тейк-профит лимит
    
    <h4>    Ограничения по частоте запросов     </h4>
    <p>На текущий момент ограничений по количеству запросов в минуту нет, однако есть ограничение на общее количество подписок (сотни тысяч). При достижении лимита подписок клиент будет заблокирован и в течение нескольких минут не сможет создавать новые подписки. Уже существующие подписки продолжат работать. <br/>
     Сервер может обрабатывать "тяжелые" запросы (пример - история за все время) и запросы без авторизации с меньшим приоритетом.<br/>
    </p>

    <h4>Получение списка портфелей</h4>
    <p>Получить список доступных портфелей можно из JWT токена</p>
    <p>Для получения списка доступных портфелей необходимо декодировать JWT токен. Портфели находятся в поле <b>portfolios</b>.</p>
    <br/>
    
    <h2>
    Авторизация
    </h2>

    <h4>OAuth</h4>

    <b>Внимание!</b>  
    JWT и refresh token — равносильны логину и паролю.
    Их нужно скрывать от публичного доступа.

    <h4>Для разработчиков сторонних приложений, в которых торговлю будут вести их пользователи.</h4>
    
    Мы предоставляем сервис для авторизации сторониих приложений по стандарту OAuth 2.0.
    С примером приложения, использующего OAuth сервис для авторизации пользователей можно ознакомиться в разделе
     <a href="/examples">Примеры</a>.

    Список разрешений (scopes), которые могут быть выданы приложению:
    <table>
      <tr>
        <td><b>OrdersRead</b></td>
        <td>Чтение выставленных заявок</td>
      </tr>
      <tr>
        <td><b>OrdersCreate</b></td>
        <td>Выставление заявок</td>
      </tr>
      <tr>
        <td><b>Trades</b></td>
        <td>Чтение совершенных сделок</td>
      </tr>
      <tr>
        <td><b>Personal</b></td>
        <td>Персональная информация: ФИО, почта и т.п.</td>
      </tr>
      <tr>
        <td><b>Stats</b></td>
        <td>Статистика: прибыль, средние цены и т.п.</td>
      </tr>
    </table>

    <h4>Для ведения операций от своего имени</h4>
    
    Выписать себе <b>refresh token</b> для ведения операций от своего имени [можно здесь](https://alor.dev/open-api-tokens).

    <h2>Краткое описание работы с авторизацией</h2>

    Чтобы выполнить авторизованный запрос, добавьте в запрос заголовок с именем "Authorization"
    и значением, состоящим из префикса `"Bearer "` и валидного JWT токена.

    Срок жизни JWT короткий: это сделано для безопасности. 
    Для большинства вариантов использования API мы рекоммендуем использовать механизм  <b>refresh token</b> .
    
    Механизм  <b>refresh token</b>  позволяет получать JWT с новым сроком жизни.
    Для этого отправьте POST запрос на адрес `https://oauthdev.alor.ru/refresh?token={refreshToken}` *(тестовый контур)* или `https://oauth.alor.ru/refresh?token={refreshToken}` *(боевой контур)*.
    Если у  <b>refresh token</b>  не истек срок жизни и не он не был отозван, то в теле ответа в поле AccessToken вернётся свежий JWT токен. 

    Срок жизни  <b>refresh token</b>, получаемого обычным способом — 1 месяц.  
    Срок жизни  <b>refresh token</b>, получаемого самостоятельным выписыванием — год.

    |
    |-
    
    > Если мы для вас не завели портфели для ведения торговли в игровом контуре, оставьте заявку на <a href="mailto:openapi@alor.ru">openapi@alor.ru</a> или свяжитесь с нами в [телеграме](https://t.me/AlorOpenAPI).

    </br></br>
    Тестовый контур: `https://apidev.alor.ru`

    Боевой контур: `https://api.alor.ru`
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: '1.0'
  termsOfService: "http://alorbroker.ru"
  contact:
    email: "openapi@alor.ru"
servers:
 - url: "https://apidev.alor.ru"

tags:
  - name: ClientInfo
    description: Информация о клиенте
  - name: Instruments
    description: "Ценные бумаги / инструменты"
  - name: Other
    description: "Другое"
  - name: Orders
    description: "Работа с заявками"
  - name: Subscriptions
    description: "Подписки и события (WebSocket)"
  - name: StopOrdersV2
    description: "Стоп-заявки v2"
  - name: OrdersWebSocket
    description: Работа с заявками (WebSocket beta)
  - name: OrderGroups
    description: Группы заявок
  - name: Deprecated
    description: Устаревшее

paths:
  /md/v2/clients/{exchange}/{portfolio}/orders:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - ClientInfo
     summary: 'Получение информации о всех заявках'
     description: "Запрос информации о всех заявках"
     operationId: DevGetAllOrders
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
  /md/v2/clients/{exchange}/{portfolio}/orders/{orderId}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - ClientInfo
     summary: 'Получение информации о выбранной заявке'
     description: "Запрос информации о выбранной заявке"
     operationId: DevGetOneOrder
     parameters:
       - $ref: "#/components/parameters/ExchangePath" 
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/OrderId"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/order"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
       '404':
          description: 'Указанный orderId не найден'
     deprecated: false
     security: 
       - bearerAuth: []
 
       
  /md/v2/clients/legacy/{exchange}/{portfolio}/money:
   get: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
     summary: "Получение информации по деньгам для выбранного портфеля"
     description: "Запрос информации о позиции по деньгам. Вызов существует для обратной совместимости с API v1, предпочтительно использовать другие вызовы (/summary, /risk, /positions)"
     operationId: "ExchangePortfolioMoney"
     parameters: 
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/money"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: true
     security: 
       - bearerAuth: []
       
  /md/v2/clients/{exchange}/{portfolio}/summary:
   get: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - ClientInfo
     summary: "Получение информации о портфеле"
     description: "Запрос сводной информации о портфеле"
     operationId: "ExchangePortfolioSummary"
     parameters: 
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses: 
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/summary"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/positions:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение информации о позициях"
     description: "Запрос информации о позициях"
     operationId: "DevGetAllPositions"
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
       - $ref: "#/components/parameters/WithoutCurrency"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/positions"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/positions/{symbol}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение информации о позициях выбранного инструмента"
     description: "Запрос информации о позициях выбранного инструмента"
     operationId: "DevGetOnePosition"
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/SymbolPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/position"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
       '404':
         description: 'Указанный symbol не найден' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/trades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение информации о сделках"
     description: "Запрос информации о сделках (только за текущую торговую сессию)"
     operationId: "DevGetAllTrades"
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/{ticker}/trades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение информации о сделках по выбранному инструменту"
     description: "Запрос информации о сделках по выбранному инструменту"
     operationId: "DevGetTickerTrades"
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/TickerPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/fortsrisk:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение информации о рисках на срочном рынке"
     description: "Запрос информации о рисках на срочном рынке для выбранного портфеля"
     operationId: "Fortsrisk"
     parameters:
       - $ref: "#/components/parameters/ExchangePathMoexOnly"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/fortsrisk"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/risk:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение информации о рисках"
     description: "Запрос информации о рисках"
     operationId: "Risk"
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/risk"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []

  /md/stats/{exchange}/{portfolio}/history/trades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение истории сделок"
     description: "Запрос списка сделок за предыдущие дни (не более 1000 сделок за один запрос)"
     operationId: "TradeStats"
     parameters:
       - $ref: "#/components/parameters/ExchangePath" 
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/DateFrom"
       - $ref: "#/components/parameters/FromId"
       - $ref: "#/components/parameters/LimitQueryOptionalMax1000"
       - $ref: "#/components/parameters/Descending"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []

  
  /md/stats/{exchange}/{portfolio}/history/trades/{symbol}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
     summary: "Получение истории сделок (один тикер)"
     description: "Запрос списка сделок за предыдущие дни (не более 1000 сделок за один запрос) по одному инструменту. "
     operationId: "TradeStatsBySymbol"
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/SymbolPath"
       - $ref: "#/components/parameters/DateFrom"
       - $ref: "#/components/parameters/FromId"
       - $ref: "#/components/parameters/LimitQueryOptionalMax1000"
       - $ref: "#/components/parameters/Descending"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/Securities:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Получение информации о торговых инструментах'
     description: 'Запрос информации о торговых инструментах'
     operationId: DevSecuritiesSearch
     parameters:
       - $ref: "#/components/parameters/TickerQueryNamedQuery"
       - $ref: "#/components/parameters/LimitQueryOptional"
       - $ref: "#/components/parameters/Offset"
       - $ref: "#/components/parameters/Sector"
       - $ref: "#/components/parameters/CfiCode"
       - $ref: "#/components/parameters/ExchangeQueryOptional"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/securities"
     security: 
       - bearerAuth: []
     deprecated: false
     
  /md/v2/Securities/{exchange}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Получение информации о торговых инструментах на выбранной бирже'
     description: 'Запрос информации об инструментах на выбранной бирже'
     operationId: DevSecuritiesSearchExchange
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/securities"
     deprecated: false
     security: 
      - bearerAuth: []
      
  /md/v2/Securities/{exchange}/{symbol}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Получение информации о выбранном финансовом инструменте'
     description: 'Запрос информации о выбранном финансовом инструменте на бирже'
     operationId: DevSecuritiesSearchExchangeCode
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/SymbolPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/security"
       '404':
         description: 'Указанный symbol не найден' 
     deprecated: false
     security: 
      - bearerAuth: []
       
  /md/v2/Securities/{symbols}/quotes:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Получение информации о котировках для выбранных инструментов'
     description: 'Запрос информации о котировках для выбранных инструментов и бирж'
     operationId: DevQuotes
     parameters:
       - $ref: "#/components/parameters/SymbolsPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/symbols"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/orderbooks/{exchange}/{seccode}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Получение информации о биржевом стакане'
     description: 'Запрос биржевого стакана'
     operationId: DevOrderbookExchangSeccode
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/SecCode"
       - $ref: "#/components/parameters/Depth"
       - $ref: "#/components/parameters/Format"
        
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orderbook"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/Securities/{exchange}/{symbol}/alltrades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
      #- Warp.API.HTTP.Marketdata
     summary: 'Получение информации о всех сделках по ценным бумагам за сегодня'
     description: "Запросить данные о всех сделках (лента) по ценным бумагам за сегодняшний день"
     operationId: DevSecuritiesSearchAllTrades
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/SymbolPath"
       - $ref: "#/components/parameters/Format"
       - $ref: "#/components/parameters/DateFromSecQueryOptional"
       - $ref: "#/components/parameters/DateToSecQueryOptional"
       - $ref: "#/components/parameters/FromIdAllTrades"
       - $ref: "#/components/parameters/ToId"
       - $ref: "#/components/parameters/Take"
       - $ref: "#/components/parameters/Descending"
       - $ref: "#/components/parameters/IncludeVirtualTrades"
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/alltrades"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
      - bearerAuth: []
  
  /md/v2/Securities/{exchange}/{symbol}/alltrades/history:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
      #- Warp.API.HTTP.Marketdata
     summary: 'Получение исторической информации о всех сделках по ценным бумагам'
     description: "Запросить данные о сделках (лента) по ценным бумагам за исторический период (за текущий день сделки не отдаются)"
     operationId: DevSecuritiesSearchAllTradesHistory
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/SymbolPath"
       - $ref: "#/components/parameters/DateFromSecQueryOptional"
       - $ref: "#/components/parameters/DateToSecQueryOptional"
       - $ref: "#/components/parameters/LimitQueryMax50000"
       - $ref: "#/components/parameters/Offset"
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/alltradeshistory"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
      - bearerAuth: []
      
  /md/v2/Securities/{exchange}/{symbol}/actualFuturesQuote:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Получение котировки по ближайшему фьючерсу (код)'
     description: 'Запрос котировки по ближайшему фьючерсу (только по коду, без даты)'
     operationId: DevSecuritiesFutures
     parameters:
       - $ref: "#/components/parameters/ExchangePathMoexOnly"
       - $ref: "#/components/parameters/SymbolPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/symbol_futures"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
      - bearerAuth: []
  
  /md/v2/time:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Other
     summary: 'Запрос текущего UTC времени в формате Unix'
     description: 'Запрос текущего UTC времени в формате Unix Time Seconds. Если этот запрос выполнен без авторизации, то будет возвращено время, которое было 15 минут назад.' 
     operationId: LocalTime
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/time"
     deprecated: false
     security: 
       - bearerAuth: []

  /md/v2/risk/rates:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Запрос ставок риска'
     description: 'Получение ставок риска для маржинальной торговли.' 
     operationId: RiskRates
     parameters:
       - $ref: "#/components/parameters/ExchangeQuery"
       - $ref: "#/components/parameters/TickerQuery"
       - $ref: "#/components/parameters/RiskCategoryId"
       - $ref: "#/components/parameters/Search"
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/riskRates"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/history:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - Instruments
     summary: 'Запрос истории для выбранных биржи и инструмента'
     description: 'Запрос истории рынка для выбранных биржи и финансового инструмента. Данные имеют задержку в 15 минут, если запрос не авторизован. Для авторизованных клиентов задержка не применяется.'
     operationId: DevHistory
     parameters:
       - $ref: "#/components/parameters/SymbolQuery"
       - $ref: "#/components/parameters/ExchangeQuery"
       - $ref: "#/components/parameters/TimeFrame"
       - $ref: "#/components/parameters/DateFromSecQuery"
       - $ref: "#/components/parameters/DateToSecQuery"
       - $ref: "#/components/parameters/Untraded"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/history"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
       - bearerAuth: []


  /commandapi/warptrans/TRADE/v2/client/orders/actions/market:
    post: 
      tags: 
        - Orders
      summary: "Создание рыночной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/market"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsMarketTV'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"

      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []
  
  /commandapi/warptrans/TRADE/v2/client/orders/actions/limit:
    post: 
      tags: 
        - Orders
      summary: "Создание лимитной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/limit"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsLimitTV'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []
  
  
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConnector"
     summary: "Создание стоп-лосс заявки"
     description: ""
     operationId: "/v2/client/orders/actions/stopLoss"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConnector"
     summary: "Создание стоп-заявки"
     description: ""
     operationId: "/v2/client/orders/actions/takeProfit"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Создание стоп-лимит заявки"
     description: ""
     operationId: "/v2/client/orders/actions/takeProfitLimit"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Создание стоп-лосс лимит заявки"
     description: "Создание стоп-лосс лимит заявки"
     operationId: "/v2/client/orders/actions/stopLossLimit"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []
  
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss/{orderId}:
    #не совпадают виды запросов(путь) в postman и в visualstudio
    #здесь описан путь в соответствии с кодом в visualstudio
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-лосс заявки"
     description: "Изменение стоп-лосс заявки с указанным номером"
     operationId: "/v2/client/orders/actions/stopLoss/{orderId}"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
       - $ref: "#/components/parameters/OrderId"
     responses: 
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit/{orderId}:
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-заявки"
     description: "Изменение стоп-заявки с указанным номером"
     operationId: "/v2/client/orders/actions/takeProfit/{orderId}"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
       - $ref: "#/components/parameters/OrderId"
     responses: 
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit/{orderId}:
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-лимит заявки"
     description: "Изменение стоп-лимит заявки с указанным номером"
     operationId: "/v2/client/orders/actions/takeProfitLimit/{orderId}"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
       - $ref: "#/components/parameters/OrderId"
     responses: 
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
     deprecated: true
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit/{orderId}:
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-лосс лимит заявки"
     description: "Изменение стоп-лосс лимит заявки с указанным номером"
     operationId: "/v2/client/orders/actions/stopLossLimit/{orderId}"
     #в коде stopLossLimit потерялся, зато есть два takeProfitLimit
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
       - $ref: "#/components/parameters/OrderId"
     responses: 
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: true
     security: 
       - bearerAuth: []

  

  /commandapi/warptrans/TRADE/v2/client/orders/actions/market/{orderId}:
    put: 
      tags: 
        - Orders
      summary: "Изменение рыночной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/marketput"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsMarketTVput'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
        - $ref: "#/components/parameters/OrderId"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket"
      deprecated: false
      security: 
        - bearerAuth: []
  
  /commandapi/warptrans/TRADE/v2/client/orders/actions/limit/{orderId}:
    put: 
      tags: 
        - Orders
      summary: "Изменение лимитной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/limitput"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsLimitTVput'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
        - $ref: "#/components/parameters/OrderId"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket"
      deprecated: false
      security: 
        - bearerAuth: []


  /commandapi/warptrans/TRADE/v2/client/orders/{orderId}:
    delete: 
      tags: 
        - Orders
      summary: "Снятие заявки"
      description: "Снятие заявки с указанным идентификатором"
      operationId: "CommandAPI /v2/client/orders/delete"
      parameters:
        - $ref: "#/components/parameters/OrderId"
        - $ref: "#/components/parameters/PortfolioQuery"
        - $ref: "#/components/parameters/ExchangeQueryMoexOnly"
        - $ref: "#/components/parameters/Stop"
        - $ref: "#/components/parameters/JsonResponse"
        - $ref: "#/components/parameters/Format"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commandapiSuccessResponse"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
                type: object
                properties:
                  "code":
                    type: string
                    example: "OrderToCancelNotFound (404)"
                    description: 'Тип ошибки'
                  "message":
                    type: string
                    example: "Order to cancel not found"
                    description: 'Описание ошибки'
      deprecated: false
      security: 
        - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/{orderId}:
    #не совпадают виды запросов(путь) в postman и в visualstudio
    #здесь описан путь в соответствии с кодом в visualstudio
   delete: 
     tags: 
      - Deprecated
      #-  "Warp.ATConvertor"
     summary: "Снятие стоп-заявки"
     description: "Снятие стоп-заявки с указанным идентификатором"
     operationId: '/v2/client/orders/actions/{orderId}'
     parameters:
       - $ref: "#/components/parameters/X-ALOR-REQID"
       - $ref: "#/components/parameters/TradeServerCode"
       - $ref: "#/components/parameters/OrderId"
       - $ref: "#/components/parameters/PortfolioQuery"
       - $ref: "#/components/parameters/Stop"
     responses: 
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_DeleteOrderId"
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
     deprecated: true
     security: 
       - bearerAuth: []
  /commandapi/warptrans/TRADE/v2/client/orders/estimate:
    post:
      tags:
        - Orders
      summary: Провести оценку одной заявки
      operationId: '/v2/client/orders/actions/estimate'
      requestBody:
        description: Параметры заявки
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/estimateOrderModel'
            application/json:
              schema:
                $ref: '#/components/schemas/estimateOrderModel'
            text/json:
              schema:
                $ref: '#/components/schemas/estimateOrderModel'
      security: 
       - bearerAuth: []
  /commandapi/warptrans/TRADE/v2/client/orders/estimate/all:
    post:
      tags:
        - Orders
      summary: Провести оценку нескольких заявок
      operationId: '/v2/client/orders/actions/estimate/all'
      requestBody:
        description: Список параметров заявок
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estimateOrderModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estimateOrderModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estimateOrderModel'
      security: 
       - bearerAuth: []


  "/ws               ":
   trace:
     tags:
       - Subscriptions
     summary: 'WebSocket подписка на "биржевой стакан"'
     description: |
      **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br>
       Подписка на информацию о биржевом стакане для выбранных биржи и финансового инструмента.<br>
       Поддерживаются только авторизованные запросы.
     operationId: WS_prod_OrderBook
     requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ws_req_OrderBookGetAndSubscribe"
     responses:
       '200':
         description: 'Сообщение о результатах подписки'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_HandledSuccessfully"
       '100':
         description: 'В качестве ответа приходят объекты как в этой схеме'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_OrderBookGetAndSubscribe"
     deprecated: false
     security: []
     servers:
        - url: 'wss://apidev.alor.ru/ws'
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          variables: {}
  "/ws              ":
   trace:
     tags:
       - Subscriptions
     summary: 'WebSocket подписка на историю цен (свечи)'
     description: |
      **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на историю цен (свечи) для выбранных биржи и финансового инструмента. 
     operationId: WS_prod_BarsGet 
     requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ws_req_BarsGetAndSubscribe"
     responses:
       '200':
         description: 'Сообщение о результатах подписки'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_HandledSuccessfully"
       '100':
         description: 'В качестве ответа приходят объекты как в этой схеме'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_BarsGetAndSubscribe"
     deprecated: false
     security: []
     servers:
        - url: 'wss://apidev.alor.ru/ws'
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          variables: {}

  "/ws             ":
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию о котировках'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о котировках для выбранных инструментов и бирж.
      operationId: WS_prod_QuotesSubscribe
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_QuotesSubscribe"
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_QuotesSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws                    ":
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на все сделки'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о всех сделках.
      operationId: WS_prod_AllTradesGetAndSubscribe
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_AllTradesGetAndSubscribe"
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/alltrades"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws            ":
      trace:
        tags:
          - Subscriptions
        summary: 'WebSocket подписка на информацию о текущих позициях по торговым инструментам и деньгам'
        description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих позициях по ценным бумагам и деньгам. 
        operationId: WS_prod_PositionsSubscribe
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_PositionsGetAndSubscribe"
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_PositionsGetAndSubscribe"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws          ":
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на сводную информацию по портфелю'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на сводную информацию по портфелю.
      operationId: WS_prod_SummariesGetAndSubscribeV2
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_SummariesGetAndSubscribeV2'
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_SummariesGetAndSubscribeV2"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/ws                ":
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию по портфельным рискам'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на сводную информацию по портфельным рискам.
      operationId: WS_prod_RisksGetAndSubscribe
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_RisksGetAndSubscribe'
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_RisksGetAndSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/ws                  ":
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию по рискам срочного рынка (FORTS)'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию по рискам срочного рынка (FORTS).
      operationId: WS_prod_SpectraRisksGetAndSubscribe
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_SpectraRisksGetAndSubscribe'
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_SpectraRisksGetAndSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/ws           ":
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на сделки'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о сделках.
      operationId: WS_prod_TradesSubscribe
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_TradesGetAndSubscribe"
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_TradesGetAndSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws         ":
    trace:
        tags:
          - Deprecated
        summary: 'WebSocket подписка на информацию о стоп-заявках'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_StopOrdersSubscribe
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_StopOrdersGetAndSubscribe'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_StopOrdersGetAndSubscribe"
        deprecated: true
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
 
  "/ws                 ":
    trace:
        tags:
          - Subscriptions
        summary: 'WebSocket подписка на информацию о заявках'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_OrdersSubscribe
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_OrdersGetAndSubscribe'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_OrdersGetAndSubscribe"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws                     ":
    trace:
        tags:
          - Subscriptions
        summary: 'WebSocket подписка на изменение информации о финансовых инструментах'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на изменение информации о финансовых инструментах на выбранной бирже.
        operationId: WS_prod_InstrumentsGetAndSubscribeV2
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_InstrumentsGetAndSubscribeV2'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме (только поля, которые изменились). Запросить текущие состояние по всем полям возможно через вызовы группы /securities'
            content:
              application/json:
                examples:
                  sample1:
                    value:
                      priceMax: 104.3
                      priceMin: 100
                      marginbuy: 110
                      marginsell: 80
                      tradingStatus: 17
                      tradingStatusInfo: 'нормальный период торгов'
                      theorPrice: 0.0
                      theorPriceLimit: 0.0
                      volatility: 0.0
                  sample2:
                    value:
                      priceMax: 105.3
                      priceMin: 99
                  sample3:
                    value:
                      tradingStatus: 18
                      tradingStatusInfo: 'нет торгов или торги закрыты'
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws        ":
    trace:
        tags:
          - Subscriptions
        summary: 'WebSocket отмена существующей подписки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).
        operationId: WS_prod_Unsubscribe
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_Unsubscribe'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  /md/v2/clients/{exchange}/{portfolio}/stoporders:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       - ClientInfo
       - StopOrdersV2
     summary: 'Получение информации о стоп-заявках'
     description: "Запрос информации о всех стоп-заявках"
     operationId: DevGetAllStopOrders
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/stopordersWarp"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
  /md/v2/clients/{exchange}/{portfolio}/stoporders/{orderId}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      - ClientInfo
      - StopOrdersV2
     summary: 'Получение информации о выбранной стоп-заявке'
     description: "Запрос информации о выбранной стоп-заявке"
     operationId: DevGetOneStopOrder
     parameters:
       - $ref: "#/components/parameters/ExchangePath"
       - $ref: "#/components/parameters/PortfolioPath"
       - $ref: "#/components/parameters/OrderId"
       - $ref: "#/components/parameters/Format"
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/stoporderWarp"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
       '404': 
          description: 'Указанный orderId не найден'
     deprecated: false
     security: 
       - bearerAuth: []
  /commandapi/warptrans/TRADE/v2/client/orders/actions/stopLimit:
    post: 
      tags: 
        - StopOrdersV2
      summary: "Создание стоп-лимитной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/stopLimit"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopLimitTVWarp'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/actions/stop:
    post: 
      tags: 
        - StopOrdersV2
      summary: "Создание стоп-заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/stop"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopMarketTVWarp'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/actions/stop/{stopOrderId}:
    put:
      tags: 
        - StopOrdersV2
      summary: "Изменение стоп-заявки"
      description: "Изменение стоп-заявки"
      operationId: "CommandAPI /v2/client/orders/actions/stop/{stopOrderId}"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopMarketTVWarp'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
        - $ref: "#/components/parameters/StopOrderId"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/actions/stopLimit/{stopOrderId}:
    put:
      tags: 
        - StopOrdersV2
      summary: "Изменение стоп-лимитной заявки"
      description: "Изменение стоп-лимитной заявки"
      operationId: "CommandAPI /v2/client/orders/actions/stopLimit/{stopOrderId}"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopLimitTVWarp'
      parameters:
        - $ref: "#/components/parameters/X-ALOR-REQID"
        - $ref: "#/components/parameters/StopOrderId"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/{orderId}/:
    delete: 
      tags: 
        - StopOrdersV2
      summary: "Снятие заявки"
      description: "Снятие заявки с указанным идентификатором"
      operationId: "CommandAPIWarp /v2/client/orders/delete"
      parameters:
        - $ref: "#/components/parameters/OrderId"
        - $ref: "#/components/parameters/PortfolioQuery"
        - $ref: "#/components/parameters/ExchangeQueryMoexOnly"
        - $ref: "#/components/parameters/Stop"
        - $ref: "#/components/parameters/JsonResponse"
        - $ref: "#/components/parameters/Format"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commandapiSuccessResponse"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
                type: object
                properties:
                  "code":
                    type: string
                    example: "OrderToCancelNotFound (404)"
                    description: 'Тип ошибки'
                  "message":
                    type: string
                    example: "Order to cancel not found"
                    description: 'Описание ошибки'
      deprecated: false
      security: 
        - bearerAuth: []

  "/ws                   ":
    trace:
        tags:
          - Subscriptions
        summary: 'WebSocket подписка на информацию о стоп-заявках'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_StopOrdersSubscribeV2
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_StopOrdersGetAndSubscribeV2'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_res_StopOrdersGetAndSubscribeWarp'
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/cws                 ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Авторизация'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_authorize
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_Authorize"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_Authorize"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws               ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Создание рыночной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_create_market
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_CreateMarketOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws              ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Создание лимитной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_create_limit
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_CreateLimitOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws             ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Создание стоп-заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_create_stop
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_CreateStopOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws            ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Создание стоп-лимитной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_create_stoplimit
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_CreateStopLimitOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws           ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Изменение рыночной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_update_market
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_UpdateMarketOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws          ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Изменение лимитной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_update_limit
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_UpdateLimitOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws         ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Изменение стоп-заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_update_stop
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_UpdateStopOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws        ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Изменение стоп-лимитной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_update_stoplimit
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_UpdateStopLimitOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws       ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Снятие рыночной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_delete_market
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_DeleteMarketOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws      ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Снятие лимитной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_delete_limit
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_DeleteLimitOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws     ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Снятие стоп-заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_delete_stop
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_DeleteStopOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  "/cws    ":
    trace:
        tags:
          -  OrdersWebSocket
        summary: 'Снятие стоп-лимитной заявки'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        operationId: WS_delete_stoplimit
        requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/commandws_req_DeleteStopLimitOrder"
        responses: 
          '200':
            description: 'OK' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_HandledSuccessfully"
          '400':
            description: 'Bad request' 
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/commandws_res_badrequest"
        deprecated: false
        security: []
        servers:
           - url: 'wss://apidev.alor.ru/cws'
             variables: {}
           - url: 'wss://api.alor.ru/cws'
             variables: {}
  /commandapi/api/orderGroups:
    get:
      tags:
        - OrderGroups
      summary: Получение всех групп заявок
      operationId: GetOrderGroups
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ordergroups_actions_GetOrderGroup"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:
              $ref: "#/components/schemas/commandapiOrderGroupsErrorResponse"
      deprecated: false
      security: 
        - bearerAuth: []
    post:
      tags: 
        - OrderGroups
      summary: Создание группы заявок
      description: Создание группы заявок на основе уже созданных заявок
      operationId: CreateOrderGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_CreateOrderGroup'
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                type: string
                format: uuid
                description: Идентификатор только что созданной группы
                example: eafb19d6-c578-4afe-aa95-d528c4531031
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
              $ref: "#/components/schemas/commandapiOrderGroupsErrorResponse"
      deprecated: false
      security: 
        - bearerAuth: []
    

  /commandapi/api/orderGroups/{orderGroupId}:
    get:
      tags:
        - OrderGroups
      summary: Получение информации о группе заявок
      operationId: GetOrderGroup
      parameters:
        - in: path
          name: orderGroupId
          required: true
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          schema:
            type: string
            format: uuid
          description: Идентификатор группы заявок
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ordergroups_actions_GetOrderGroup"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
              $ref: "#/components/schemas/commandapiOrderGroupsErrorResponse"
      deprecated: false
      security: 
        - bearerAuth: []
    put:
      tags: 
        - OrderGroups
      summary: Редактирование группы заявок
      description: Редактирование группы заявок (связывание новых заявок, изменение типа связи)
      operationId: ModifyOrderGroup
      parameters:
        - in: path
          name: orderGroupId
          required: true
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          schema:
            type: string
            format: uuid
          description: Идентификатор группы заявок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_ModifyOrderGroup'
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commandapiSuccessResponse"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
              $ref: "#/components/schemas/commandapiOrderGroupsErrorResponse"
      deprecated: false
      security: 
        - bearerAuth: []
    delete:
      tags: 
        - OrderGroups
      summary: Удаление группы заявок
      operationId: DeleteOrderGroup
      parameters:
        - in: path
          name: orderGroupId
          required: true
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          schema:
            type: string
            format: uuid
          description: Идентификатор группы заявок
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commandapiSuccessResponse"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
              $ref: "#/components/schemas/commandapiOrderGroupsErrorResponse"
      deprecated: false
      security: 
        - bearerAuth: []




components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT #Токен из OAuth
  parameters:
    X-ALOR-REQID:
      name: X-ALOR-REQID
      in: header
      description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
      required: true
      schema:
        type: string
      example: "9823-616stn"

    ExchangePath:
      name: 'exchange'
      in: path
      description: 'Биржа'
      required: true
      schema:
        description: > 
          Биржа:
            * `MOEX` - Московская биржа
            * `SPBX` - СПБ Биржа
        type: string
        enum:
          - MOEX
          - SPBX
    ExchangePathMoexOnly:
      name: 'exchange'
      in: path
      description: 'Биржа'
      required: true
      schema:
        description: > 
          Биржа:
            * `MOEX` - Московская биржа
        type: string
        enum:
          - MOEX
    ExchangeQueryOptional:
      name: exchange
      in: query
      description: 'Биржа'
      required: false
      schema:
        description: > 
          Биржа:
            * `MOEX` - Московская биржа
            * `SPBX` - СПБ Биржа
        type: string
        enum:
          - MOEX
          - SPBX
    ExchangeQuery:
      name: exchange
      in: query
      description: 'Биржа'
      required: true
      schema:
        description: > 
          Биржа:
            * `MOEX` - Московская биржа
            * `SPBX` - СПБ Биржа
        type: string
        enum:
          - MOEX
          - SPBX
    ExchangeQueryMoexOnly:
      name: exchange
      in: query
      description: 'Биржа'
      required: true
      schema:
        description: > 
          Биржа:
            * `MOEX` - Московская биржа
        type: string
        enum:
          - MOEX
    PortfolioPath:
      name: portfolio
      in: path
      description: 'Идентификатор клиентского портфеля'
      required: true
      schema:
        type: string
      example: D39004
    PortfolioQuery:
      name: portfolio
      in: query
      description: 'Идентификатор клиентского портфеля'
      required: true
      schema:
        type: string
      example: D39004
    Format:
      name: format
      in: query
      description: 'Формат возвращаемого сервером JSON'
      required: false
      schema:
        enum:
          - Simple
      example: Simple
    OrderId:
      name: orderId
      in: path
      description: 'Идентификатор заявки'
      required: true
      style: simple
      schema:
        type: integer
        format: int64
      example: 93713183
    StopOrderId:
      name: stopOrderId
      in: path
      description: 'Идентификатор заявки'
      required: true
      schema:
        type: integer
        format: int64
      example: 18946369167
    WithoutCurrency:
      name: withoutCurrency
      in: query
      description: 'Исключить из ответа все денежные инструменты'
      required: false
      schema:
        type: boolean
      example: false
    DateFrom:
      name: dateFrom
      in: query
      description: 'Начиная с какой даты отдавать историю сделок'
      required: false
      schema:
        type: string
        format: date
        example: '2021-10-13'
    DateFromSecQuery:
      name: from
      in: query
      description: 'Начало отрезка времени (UTC) в формате Unix Time Seconds'
      required: true
      schema:
        type: integer
        format: int64
      example: 1549000661
    DateFromSecQueryOptional:
      name: from
      in: query
      description: 'Начало отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
      required: false
      schema:
        type: integer
        format: int64
      example: 1593430060
    DateToSecQueryOptional:
      name: to
      in: query
      description: 'Конец отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
      required: false
      schema:
        type: integer
        format: int64
      example: 1593430560
    DateToSecQuery:
      name: to
      in: query
      description: 'Конец отрезка времени (UTC) в формате Unix Time Seconds'
      required: true
      schema:
        type: integer
        format: int64
      example: 1550060661
    SymbolPath:
      name: symbol
      in: path
      description: 'Тикер (Код финансового инструмента)'
      required: true
      style: simple
      schema:
        type: string
      example: "LKOH"
    SymbolQuery:
      name: symbol
      in: query
      description: 'Тикер (Код финансового инструмента)'
      required: true
      style: form
      schema:
        type: string
      example: SBER
    SymbolsPath:
      name: symbols
      in: path
      description: 'Принимает несколько пар биржа-тикер. Пары отделены запятыми. Биржа и тикер разделены двоеточием'
      required: true
      schema:
        type: string
        example: "MOEX:SBER,MOEX:GAZP,SPBX:AAPL"
      example: "MOEX:SBER,MOEX:GAZP,SPBX:AAPL"
    TickerPath:
      name: ticker
      in: path
      description: 'Тикер (Код финансового инструмента)'
      required: true
      style: simple
      schema:
        type: string
      example: "LKOH"
    TickerQuery:
      name: ticker
      in: query
      description: 'Тикер\код инструмента, ISIN для облигаций'
      required: false
      schema:
        type: string
        example: SBER
    TickerQueryNamedQuery:
      name: 'query'
      in: query
      description: 'Тикер (Код финансового инструмента)'
      required: true
      schema:
        type: string
      example: GAZP
    CfiCode:
      name: 'cficode'
      in: query
      description: 'Код финансового инструмента по стандарту ISO 10962'
      required: false
      schema:
        type: string
      example: 'EXXXXX'
    SecCode:
      name: seccode
      in: path
      description: 'Инструмент'
      required: true
      schema:
        type: string
      example: RTS-9.20
    Search:
      name: search
      in: query
      description: 'Часть Тикера\кода инструмента, ISIN для облигаций. Вернет все совпадения, начинающиеся с '
      required: false
      schema:
        type: string
      example: SBER
    FromId:
      name: from
      in: query
      description: 'Начальный номер сделки для фильтра результатов'
      required: false
      schema:
        type: integer
        format: int64
        example: 93713183
    FromIdAllTrades:
      name: fromId
      in: query
      description: 'Начальный номер сделки для фильтра результатов'
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
      example: 7796897024
    ToId:
      name: toId
      in: query
      description: 'Конечный номер сделки для фильтра результатов'
      required: false
      schema:
        type: integer
        format: int64
      example: 7796897280
    TimeFrame:
      name: tf
      in: query
      description: 'Длительность таймфрейма в секундах или код ("D" - дни, "W" - недели, "M" - месяцы, "Y" - годы)' 
      required: true
      schema:
        type: string
        enum: 
        - 15
        - 60
        - 300
        - 3600
        - "D"
        - "W"
        - "M"
        - "Y"
      example: '60' #8fb58820-d933-46c4-98be-83343ebd728d
    LimitQueryOptionalMax1000:
      name: limit
      in: query
      description: 'Количество возвращаемых записей'
      required: false
      schema:
        type: integer
        format: int32
        maximum: 1000
        example: 50
    LimitQueryMax50000:
      name: limit
      in: query
      description: 'Ограничение на количество выдаваемых результатов поиска (1-50000)'
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 50000
      example: 100
    LimitQueryOptional:
      name: limit
      in: query
      description: 'Ограничение на количество выдаваемых результатов поиска'
      required: false
      schema:
        type: integer
        format: int32
      example: 3
    Offset:
      name: offset
      in: query
      description: 'Смещение начала выборки (для пагинации)'
      required: false
      schema:
        type: integer
        format: int32
      example: 10
    Depth:
      name: depth
      in: query
      description: 'Глубина стакана. Стандартное и максимальное значение - 20 (20х20).'
      required: false
      schema:
        type: integer
        format: int32
        maximum: 20
        default: 20
        minimum: 1
      example: 5
    Take:
      name: take
      in: query
      description: 'Количество загружаемых элементов'
      required: false
      schema:
        type: integer
        format: int32
      example: 10
    Descending:
      name: descending
      in: query
      description: 'Флаг обратной сортировки выдачи'
      required: false
      schema:
        type: boolean
      example: false
    Sector:
      name: sector
      in: query
      description: 'Рынок на бирже'
      required: false
      schema:
        type: string
        description: >
          Рынок:
            * `FORTS` - Срочный рынок
            * `FOND` - Фондовый рынок
            * `CURR` - Валютный рынок
        enum:
          - FORTS
          - FOND
          - CURR
      example: FOND
    IncludeVirtualTrades:
      name: includeVirtualTrades
      in: query
      description: 'Флаг загрузки виртуальных (индикативных) сделок, полученных из заявок на питерской бирже'
      required: false
      schema:
        type: boolean
      example: false
    RiskCategoryId:
      name: riskCategoryId
      in: query
      description: 'Id вашей (или той которая интересует) категории риска. Можно получить из запроса информации по клиенту или через кабинет клиента'
      required: false
      schema:
        $ref: "#/components/schemas/RiskCategoryId"
      example: 1
    Untraded:
      name: untraded
      in: query
      description: 'Флаг для поиска данных по устаревшим или экспирированным инструментам. При использовании требуется точное совпадение тикера'
      required: false
      schema:
        type: boolean
      example: false
    TradeServerCode:
      deprecated: true
      name: tradeServerCode
      in: path
      description: 'Код торгового сервера'
      required: true
      schema:
        type: string
      example: TRADE
    Stop:
      name: stop
      in: query
      description: 'Является стоп-заявкой?'
      required: true
      schema:
        type: boolean
      example: false
    JsonResponse:
      name: jsonResponse
      in: query
      description: 'Ответ в формате JSON. В виде отдельного параметра для обратной совместимости.'
      required: false
      schema:
        type: boolean
      example: false

  schemas:
    Exchange:
      description: > 
        Биржа:
          * `MOEX` - Московская биржа
          * `SPBX` - СПБ Биржа
      type: string
      enum:
        - MOEX
        - SPBX
    Format:
      type: string
      default: Simple
      enum:
        - Simple
    Sector:
      type: string
      description: >
        Рынок:
          * `FORTS` - Срочный рынок
          * `FOND` - Фондовый рынок
          * `CURR` - Валютный рынок
      enum:
        - FORTS
        - FOND
        - CURR
    Side: 
      type: string
      example: buy
      description: > 
        Направление сделки:
          * `buy` - Купля
          * `sell` - Продажа
      enum: 
        - buy
        - sell
    TimeInForce:
      type: string
      example: 'OneDay'
      description: > 
        Тип заявки:
          * `OneDay` - До конца дня
          * `ImmediateOrCancel` - Снять остаток
          * `FillOrKill` - Исполнить целиком или отклонить
          * `GoodTillCancelled` - Активна до отмены
      default: OneDay
      enum:
        - OneDay
        - ImmediateOrCancel
        - FillOrKill
        - GoodTillCancelled
    OrderStatus:
      type: string
      example: filled
      description: >
        Статус исполнения:
          * `working` - На исполнении
          * `filled` - Исполнена
          * `canceled` - Отменена
          * `rejected` - Отклонена
      enum: 
        - working
        - filled
        - canceled
        - rejected
    Condition:
      type: string
      example: More
      description: >
        Условие срабатывания стоп/стоп-лимитной заявки:
          * `More` - Цена срабатывания больше текущей цены
          * `Less` - Цена срабатывания меньше текущей цены
      enum:
        - More
        - Less
    ClientType:
      type: string
      example: "HighRisk"
      description: >
        Тип клиента:
          * `StandardRisk` - Стандартный уровень риска (КСУР)
          * `HighRisk` - Высокий уровень риска (КПУР)
          * `Special` -  Особый уровень риска (КОУР)
      enum:
        - StandardRisk
        - HighRisk
        - Special
    RiskCategoryId:
      type: integer
      format: int32
      example: 2
      description: >
        Категория риска.
    TradingStatus:
      type: integer
      format: int32
      example: 17
      description: >
        Торговый статус инструмента:
          * `18` - Нет торгов / торги закрыты
          * `118` - Период открытия
          * `103` - Период закрытия
          * `2` - Перерыв в торгах
          * `17` - Нормальный период торгов
          * `102` - Аукцион закрытия
          * `106` - Аукцион крупных пакетов
          * `107` - Дискретный аукцион
          * `119` - Аукцион открытия
          * `120` - Период торгов по цене аукциона закрытия
    ComplexProductCategory:
      type: string
      example: "2"
      description: >
        Требуемая категория для осуществления торговли инструментом:
          * `` - Нет ограничений
          * `0` - Инструменты, предназначенные для КИ
          * `1` - Необеспеченные сделки
          * `2` - Производные финансовые инструменты
          * `3` - Договоры репо, требующие тестирования
          * `4` - Структурные облигации, не предназначенные для КИ
          * `5` - ЗПИФ, не предназначенные для КИ
          * `6` - Облигации российских эмитентов без рейтинга
          * `7` - Облигации иностранных эмитентов, исполнение по которым обеспечивается за счет юридического лица РФ без рейтинга
          * `8` - Облигации со структурным доходом
          * `9` - Акции, не включенные в котировальные списки
          * `10` - Иностранные акции, требующие проведения тестирования
          * `11` - Паи/акции ETF, не включенные в котировальные списки и допущенные к организованным торгам при наличии договора организатора торговли с "ответственным" лицом
          * `12` - Паи/акции ETF, не включенные в котировальные списки и допущенные к организованным торгам при отсутствии договора организатора торговли с "ответственным" лицом
          * `13` - Облигации российских или иностранных эмитентов, конвертируемых в иные ценные бумаги
          * `14` - Облигации российских эмитентов с "юрисдикцией" выпуска вне рамок разрешенных
          * `15` - Облигации иностранных эмитентов с "юрисдикцией" эмитента вне рамок разрешенных
          * `16` - Резерв
          * `17` - Все бумаги, не попадающие под тесты из Базового стандарта. Ценные бумаги без листинга на Санкт-Петербургской бирже, возникшие в результате корпоративных событий
      enum:
        - 
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6 
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
      nullable: true
    OrderType:
      type: string
      description: >
        Тип заявки:
         * Market - Рыночная заявка
         * Limit - Лимитная заявка
         * Stop - Стоп-заявка
         * StopLimit - Стоп-лимит заявка
      enum:
        - Limit
        - Market
        - Stop
        - StopLimit
    ExecutionPolicy:
      type: string
      description: >
        Тип группы заявок:
         * OnExecuteOrCancel - Группа отменяется при отмене/выполнении/редактировании любой заявки
         * IgnoreCancel - Группа отменяется при исполнении заявки. При отмене или редактировании заявки - заявка удаляется из группы, группа остаётся активной
         * TriggerBracketOrders - Группа, содержащая одну лимитную заявку и несколько стопов. Для создания группы, стоп-заявки должны быть созданны с флагом 'Activate = false'. После выполнения лимитной заявки, активируются стоп-заявки 
      enum:
        - OnExecuteOrCancel
        - IgnoreCancel
        - TriggerBracketOrders
    OrderGroupStatus:
      type: string
      description: >
        Статус группы заявок
         * Active - группа активна 
         * Filled - группа исполнена торговой системой
         * Canceled - группа отменена пользователем
      enum:
        - Active
        - Filled
        - Canceled


    #put or post type responses
    orders_actions_LimitMarket_CommandAPI:
      type: object
      properties: 
        message:
          type: string
          example: success
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: string
          example: 18946416113
          description: 'Идентификатор заявки'
    
    orders_actions_400_CommandAPI:
      type: object
      properties: 
        message:
          type: string
          example: "Request with such X-ALOR-REQID was already handled. We return the response to that request."
          description: 'Вид ответа для неуникального X-ALOR-REQID'
        oldResponse:
          type: object
          properties:
            statusCode:
              type: integer
              format: int32
              example: 400
            body: 
              type: string
              example: "Provided json can't be properly deserialised, perhaps you made an error or forgot some field"
    
    orders_actions_StopProfitLoss_CommandAPI:
      type: object
      properties: 
        message:
          type: string
          example: 'Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}'
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: integer
          format: int64
          example: 326123
          description: 'Идентификатор заявки'

    commandapiSuccessResponse:
      type: string
      example: "success"
      description: 'Вид ответа на успешно выполненный запрос.'

    commandapiOrderGroupsErrorResponse:
      type: object
      properties:
        title:
          type: string
          description: Описание кода ошибки
          example: BadRequest
        status:
          type: integer
          format: int32
          description: Код ошибки
          example: 400
        detail:
          type: string
          description: Описание ошибки
          example: Forbidden attempt to modify an order (3625092321506) not owned by the user

    ordergroups_actions_GetOrderGroup:
      type: object
      properties:
        Id:
          type: string
          format: uuid
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          description: Идентификатор группы заявок
        Login:
          type: string
          example: P039004
        Orders:
          type: array
          items:
            type: object
            properties:
              OrderId:
                type: string
                example: 123457854
                description: Идентификатор заявки
          description: Список заявок, входящих в группу заявок
        ExecutionPolicy:
          $ref: "#/components/schemas/ExecutionPolicy"
        Status:
          $ref: "#/components/schemas/OrderGroupStatus"
        CreatedAt:
          type: string
          format: date-time
          nullable: false
          description: Время создания группы заявок
        ClosedAt:
          type: string
          format: date-time
          nullable: true
          description: Время выполнения/отмены группы заявок
            
    
    #put or post type body descriptions
    bodyrequest_OrdersActionsLimitTVput:
      type: object
      properties:
        side: 
          $ref: "#/components/schemas/Side"
        "type":
          type: string
          example: 'limit'
          description: 'Тип заявки'
        "id":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество'
        "price":
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "instrument":
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              $ref: "#/components/schemas/Exchange"
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        timeInForce:
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: integer
          format: int32
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
              
    bodyrequest_OrdersActionsMarketTVput:
      type: object
      properties: 
        side: 
          $ref: "#/components/schemas/Side"
        "type":
          type: string
          example: 'market'
          description: 'Тип заявки'
        "id":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        quantity:
          type: integer
          format: int32
          example: 2
          description: 'Количество'
        instrument:
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              $ref: "#/components/schemas/Exchange"
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
    
    bodyrequest_OrdersActionsLimitTV: 
      type: object
      properties: 
        side: 
          $ref: "#/components/schemas/Side"
        "type":
          type: string
          example: 'limit'
          description: 'Тип заявки'
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "price":
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        timeInForce:
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: integer
          format: int32
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'

    bodyrequest_OrdersActionsStopMarketTVWarp: 
      type: object
      properties: 
        side: 
          $ref: "#/components/schemas/Side"
        "condition":
          $ref: "#/components/schemas/Condition"
        "triggerPrice":
          type: number
          format: decimal
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: integer
          format: int64
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
            "instrumentGroup": 
              type: string
              example: "TQBR"
              description: "Борд"
        "user":
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
            exchange:
              $ref: "#/components/schemas/Exchange"
        "activate":
          type: boolean
          default: true
          description: >
            Флаг указывает, создать активную заявку, или не активную.
            Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
            Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
          example: true

    
    bodyrequest_OrdersActionsStopLimitTVWarp: 
      type: object
      properties: 
        side: 
          $ref: "#/components/schemas/Side"
        "condition":
          $ref: "#/components/schemas/Condition"
        "triggerPrice":
          type: number
          format: decimal
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: integer
          format: int64
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "price":
          type: number
          format: decimal
          example: 191.33
          description: "Цена выставления стоп-лимитной заявки"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
            "instrumentGroup": 
              type: string
              example: "TQBR"
              description: "Борд"
        "user":
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
            exchange:
              $ref: "#/components/schemas/Exchange"
        timeInForce:
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: integer
          format: int32
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
        "activate":
          type: boolean
          default: true
          description: >
            Флаг указывает, создать активную заявку, или не активную.
            Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
            Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
          example: true

    bodyrequest_OrdersActionsMarketTV: 
      type: object
      properties: 
        side: 
          $ref: "#/components/schemas/Side"
        "type":
          type: string
          example: 'market'
          description: 'Тип заявки'
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              $ref: "#/components/schemas/Exchange"
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        
    bodyrequest_OrdersActionsStopTV: 
      type: object
      properties: 
        symbol: 
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        #exchange: MOEX
        #qtyBatch: '2'
        side: 
          $ref: "#/components/schemas/Side"
        "type":
          type: string
          example: 'takeprofit'
          description: 'Тип заявки'
        takeProfit:
          type: number
          format: decimal
          example: 190.98
          description: 'Стоп-цена'
        triggerPrice:
          type: number
          format: decimal
          example: 190.98
          description: 'Стоп-цена'
        quantity:
          type: integer
          format: int32
          example: 2
          description: 'Количество'
        instrument:
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              $ref: "#/components/schemas/Exchange"
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        endTime: 
          type: string
          format: date-time
          example: '2020-05-21T20:59:00.000Z'
          description: 'Срок действия'
        stopEndUnixTime: 
          type: integer
          format: int64
          example: 1590094740
          description: 'Срок действия (UTC) в формате Unix Time seconds'
    
    bodyrequest_OrdersActionsStopLimitTV: 
      type: object
      properties: 
        symbol: 
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        side: 
          $ref: "#/components/schemas/Side"
        price:
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "type":
          type: string
          example: 'takeprofit'
          description: 'Тип заявки'
        takeProfit:
          type: number
          format: decimal
          example: 190.98
          description: 'Стоп-цена'
        triggerPrice:
          type: number
          format: decimal
          example: 190.98
          description: 'Стоп-цена'
        quantity:
          type: integer
          format: int32
          example: 2
          description: 'Количество'
        instrument:
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              $ref: "#/components/schemas/Exchange"
        user:
          type: object
          properties:
            account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        endTime: 
          type: string
          format: date-time
          example: '2020-05-21T20:59:00.000Z'
          description: 'Срок действия'
        stopEndUnixTime: 
          type: integer
          format: int64
          example: 1590094740
          description: 'Срок действия (UTC) в формате Unix Time seconds'
    
    
    #put or post type responses
    orders_actions_LimitMarket:
      #using same schema for  
      #limit=market
      type: object
      properties: 
        message:
          type: string
          example: "(162) Заявка на покупку N 9763124 зарегистрирована (1 удовлетворено)."
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: integer
          format: int64
          example: 9763124
          description: 'Идентификатор заявки'
    orders_actions_400:
      #using same schema for  
      #limit=market
      type: object
      properties: 
        message:
          type: string
          example: "Заявка не может быть принята из-за возможного недопустимого снижения уровня маржи."
          description: 'Вид ответа для случая отвергнутой заявки.'
    
    orders_actions_StopProfitLoss:
      #same shema for
      #stop=stoplimit=stoploss=takeprofit=takeprofitlimit
      type: object
      properties: 
        message:
          type: string
          example: "Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}, OrderEndTime=(None)"
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: integer
          format: int64
          example: 326123
          description: 'Идентификатор заявки'
    orders_actions_DeleteOrderId:
      type: string
      example: 'Succeeded'
      description: 'Вид ответа на успешно выполненный запрос.'
    
    #put or post type body descriptions
    bodyrequest_OrdersActionsLimit: 
      type: object
      properties: 
        Quantity:
          type: integer
          format: int32
          example: 1
          description: 'Количество'
        Side:
          $ref: "#/components/schemas/Side"
        Price:
          type: number
          format: decimal
          example: 195.11
          description: 'Цена'
        Instrument:
          type: object
          properties:
            Symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            Exchange:
              $ref: "#/components/schemas/Exchange"
        User:
          type: object
          properties:
            Account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            Portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        OrderEndUnixTime:
          type: integer
          format: int64
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time seconds'
    bodyrequest_OrdersActionsMarket: 
      type: object
      properties: 
        Quantity:
          type: integer
          format: int32
          example: 1
          description: 'Количество'
        Side:
          $ref: "#/components/schemas/Side"
        Instrument:
          type: object
          properties:
            Symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            Exchange:
              $ref: "#/components/schemas/Exchange"
        User:
          type: object
          properties:
            Account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            Portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        OrderEndUnixTime:
          type: integer
          format: int64
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time seconds' 
    bodyrequest_OrdersActionsStop: 
      type: object
      properties: 
        Quantity:
          type: integer
          format: int32
          example: 1
          description: 'Количество'
        Side: 
          $ref: "#/components/schemas/Side"
        TriggerPrice:
          type: number
          format: decimal
          example: 215.11
          description: 'Стоп-цена'
        Instrument:
          type: object
          description: Информация об инструмента и бирже
          properties:
            Symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            Exchange:
              $ref: "#/components/schemas/Exchange"
        User:
          type: object
          description: Информация о пользователе
          properties:
            Account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            Portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        OrderEndUnixTime:
          type: integer
          format: int64
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time Seconds'
    bodyrequest_OrdersActionsStoplimit: 
      type: object
      properties: 
        "Quantity":
          type: integer
          format: int32
          example: 1
          description: 'Количество'
        Side: 
          $ref: "#/components/schemas/Side"
        "TriggerPrice":
          type: number
          format: decimal
          example: 205.11
          description: 'Стоп-цена'
        "Price":
          type: number
          format: decimal
          example: 210.11
          description: 'Цена'
        "Instrument":
          type: object
          properties:
            "Symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "Exchange":
              $ref: "#/components/schemas/Exchange"
        "User":
          type: object
          properties:
            "Account":
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            "Portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "OrderEndUnixTime":
          type: integer
          format: int64
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time seconds'
        timeInForce:
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: integer
          format: int32
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
              
    bodyrequest_CreateOrderGroup: 
      type: object
      properties: 
        Orders:
          type: array
          description: 'Заявки, из которых будет состоять группа'
          items:
            $ref: "#/components/schemas/OrderGroupItem"
        ExecutionPolicy: 
          $ref: "#/components/schemas/ExecutionPolicy"
      required:
        - Orders
        - ExecutionPolicy
    
    bodyrequest_ModifyOrderGroup: 
      type: object
      properties: 
        Orders:
          type: array
          description: 'Заявки, из которых будет состоять группа'
          items:
            $ref: "#/components/schemas/OrderGroupItem"
        ExecutionPolicy: 
          $ref: "#/components/schemas/ExecutionPolicy"
      required:
        - ExecutionPolicy
    
    OrderGroupItem:
      type: object
      properties:
        Portfolio:
          type: string
        Exchange:
          $ref: "#/components/schemas/Exchange"
        OrderId:
          type: string
          example: 1532944860
          description: Идентификатор заявки
        Type:
          $ref: "#/components/schemas/OrderType"


    #get 
    "symbols":
      type: array
      items:
        $ref: '#/components/schemas/symbol'
    "orders":
      type: array
      items:
        $ref: '#/components/schemas/order'
    "stoporders":
      type: array
      items:
        $ref: '#/components/schemas/stoporder'
    "stopordersWarp":
      type: array
      items:
        $ref: '#/components/schemas/stoporderWarp'
    "history":
      type: object
      properties:
        "history":
          type: array
          items: 
            $ref: '#/components/schemas/history_object'
        "next":
          type: integer
          format: int64
          example: 1532944860
          nullable: true
          description: 'Время (UTC) начала следующей свечи'
        "prev":
          type: integer
          format: int64
          example: 1532944860
          nullable: true
          description: 'Время (UTC) начала предыдущей свечи'
    "positions":
      type: array
      items:
        $ref: '#/components/schemas/position'
    "trades":
      type: array
      items:
        $ref: '#/components/schemas/trade'
    "orderbook":
      type: object
      description: 'Данные о запрашиваемом "биржевом стакане"'
      properties:
        "snapshot":
          type: boolean
          example: true
          description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях.'
          deprecated: true
        "bids":
          type: array
          items: 
            $ref: '#/components/schemas/orderbook_bid'
          description: 'Биды'
        "asks":
          type: array
          items: 
            $ref: '#/components/schemas/orderbook_ask'
          description: 'Аски'        
        "timestamp": 
          type: number
          format: decimal
          example: 1610982677
          description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях. Вместо этого поля используйте поле "ms_timestamp".'
          deprecated: true
        "ms_timestamp": 
          type: integer
          format: int64
          example: 1610982677578
          description: 'Время(UTC) в формате Unix Time Milliseconds'
        "existing":
          type: boolean
          example: false
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "orderbook_bid":
      type: object
      properties:
        "price": 
          type: number
          format: decimal
          example: 115820
          description: 'Цена'
        "volume":
          type: integer
          format: int32
          example: 23
          description: 'Объём'
    "orderbook_ask":
      type: object
      properties:
        "price": 
          type: number
          format: decimal
          example: 116030
          description: 'Цена'
        "volume":
          type: integer
          format: int32
          example: 31
          description: 'Объём'
    "alltrades":
      type: array
      items:
        $ref: '#/components/schemas/alltrade'
    "alltradeshistory":
      type: object
      properties:
        "total":
          type: integer
          format: int32
          example: 23
          description: 'Количество записей'
        "list":
          type: array
          items:
            $ref: '#/components/schemas/alltrade'
    "securities":
      type: array
      items:
        $ref: '#/components/schemas/security'
    "riskRates":
      type: object
      properties:
        "list": 
          type: array
          items: 
            $ref: '#/components/schemas/riskRate'
          description: 'Ставка риска'
        "total":
          type: integer
          format: int32
          example: 23
          description: 'Количество записей'

    
    "symbol":
      type: object
      properties:
        "symbol":
          type: string
          example: "KMEZ"
          description: 'Тикер (Код финансового инструмента)'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "description":
          type: string
          example: "КМЗ"
          description: 'Короткое описание на русском языке'
        "ask":
          type: number
          format: decimal
          example: 171.87
          description: 'Аск'
        "bid":
          type: number
          format: decimal
          example: 171.82
          description: 'Бид'
        "prev_close_price":
          type: number
          format: decimal
          example: 174.9
          description: 'Цена предыдущего закрытия'
        "last_price": 
          type: number
          format: decimal
          example: 171.82
          description: 'Последняя цена'
        "last_price_timestamp": 
          type: integer
          format: int64
          example: 1610982677
          description: 'UTC-timestamp для значения поля "last_price"'
        "change": 
          type: number
          format: decimal
          example: -3.08
          description: 'Разность цены и цены предыдущего закрытия'
        "change_percent": 
          type: number
          format: decimal
          example: -1.76
          description: 'Относительное изменение цены'
        "high_price": 
          type: number
          format: decimal
          example: 176.02
          description: 'Максимальная цена'
        "low_price": 
          type: number
          format: decimal
          example: 170.33
          description: 'Минимальная цена'
        "accruedInt":
          type: number
          format: decimal
          example: 0
          description: 'Начислено (НКД)'
        "accrued_interest":
          type: number
          format: decimal
          deprecated: true
          example: 0
          description: 'Начислено (НКД)'
        "volume": 
          type: number 
          format: decimal
          example: 38767080.0
          description: 'Объём'
        "open_interest": 
          type: number
          format: decimal
          example: null
          nullable: true
          description: ''
        "open_price": 
          type: number
          format: decimal
          example: 175.07
          description: 'Цена открытия'
        "yield": 
          type: integer
          format: int32
          nullable: true
          example: null
          description: ""
        "lotsize": 
          type: number 
          format: decimal
          example: 10
          description: 'Размер лота'
        "lotvalue": 
          type: number
          format: decimal
          example: 1990.20
          description: ""
        "facevalue": 
          type: number
          format: decimal
          example: 5.0
          description: ""
        "type": 
          type: string
          example: "CS"
          description: ""
          nullable: true
    "symbol_futures":
      type: object
      properties:
        "symbol":
          type: string
          example: "SBRF-9.20"
          description: 'Тикер (Код финансового инструмента)'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "description":
          type: string
          example: "SRU0"
          description: 'Короткое описание на русском языке'
        "ask":
          type: number
          format: decimal
          example: 171.87
          description: 'Аск'
        "bid":
          type: number
          format: decimal
          example: 171.82
          description: 'Бид'
        "prev_close_price":
          type: number
          format: decimal
          example: 174.9
          description: 'Цена предыдущего закрытия'
        "last_price": 
          type: number
          format: decimal
          example: 171.82
          description: 'Последняя цена'
        "last_price_timestamp": 
          type: integer
          format: int64
          example: 91022000
          description: 'Время последней цены (UTC)'
        "change": 
          type: number
          format: decimal
          example: -3.08
          nullable: true
          description: 'Разность цены и цены предыдущего закрытия'
        "change_percent": 
          type: number
          format: decimal
          example: -1.76
          nullable: true
          description: 'Относительное изменение цены'
        "high_price": 
          type: number
          format: decimal
          example: 176.02
          description: 'Максимальная цена'
        "low_price": 
          type: number
          format: decimal
          example: 170.33
          description: 'Минимальная цена'
        "accruedInt":
          type: number
          format: decimal
          example: 0
          nullable: true
          description: 'Начислено (НКД)'
        "accrued_interest":
          type: number
          format: decimal
          example: 0
          nullable: true
          deprecated: true
          description: 'Начислено (НКД)'
        "volume": 
          type: number 
          format: decimal
          example: 38767080.0
          description: 'Объём'
        "open_price": 
          type: number
          format: decimal
          example: 175.07
          description: 'Цена открытия'
        "yield": 
          type: integer
          format: int32
          nullable: true
          example: null
          description: ""
        "lotsize": 
          type: number
          format: decimal
          example: 10
          description: 'Размер лота'
        "lotvalue": 
          type: number
          format: decimal
          example: 1990.20
          description: ""
        "facevalue": 
          type: number
          format: decimal
          example: 5.0
          description: ""
        "type": 
          type: string
          example: "Фьючерсный контракт SBRF-9.20"
          description: ""
    "money": 
      type: object
      properties: 
        "cash":
          type: number
          format: decimal
          example: 25614.89
          description: 'Количество средств'
        "used":
          type: number
          format: decimal
          example: 45536.11
          description: 'Количество использованных'
        "open":
          type: number
          format: decimal
          example: 45536.11
          description: 'Средства на момент открытия'
        "profit":
          type: number
          format: decimal
          example: -354.7
          description: 'Прибыль'
        "profitRate":
          type: number
          format: decimal
          example: -354.7
          description: 'Прибыль в процентах'
        "comission":
          type: number
          format: decimal
          example: 2.0
          description: 'Комиссия (в рублях)'
        "changes":
          type: number
          format: decimal
          example: 525.21
          description: 'Изменения'
        "portfolio":
          type: number
          format: decimal
          example: 525.56
          description: 'Идентификатор клиентского портфеля'
        "free":
          type: number
          format: decimal
          example: 525.25
          description: 'Свободные средства'
    "order":
      type: object
      properties:
        id:
          type: string
          example: "18995978560"
          description: 'Уникальный идентификатор заявки'
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "brokerSymbol":
          type: string
          example: "MOEX:SBER"
          description: 'Пара биржа-Тикер'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "type":
          type: string
          example: "market"
          description: >
            Тип заявки:
              * `limit` - Лимитная заявка
              * `market` - Рыночная заявка
          enum: 
            - "limit"
            - "market"
        side: 
          $ref: "#/components/schemas/Side"
        status:
          $ref: "#/components/schemas/OrderStatus"
        "transTime": 
          type: string
          format: date-time
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время выставления (UTC)'
        "endTime": 
          type: string
          format: date-time
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время завершения (UTC)'
        "qtyUnits":
          type: integer
          format: int32
          example: 1
          description: 'Количество (штуки)'
        "qtyBatch":
          type: number
          format: decimal
          example: 1
          description: 'Количество (лоты)'
        "qty":
          type: number
          format: decimal
          example: 1
          description: 'Количество (лоты)'
        "filledQtyUnits":
          type: number
          format: decimal
          example: 1
          description: 'Количество исполненных (штуки)'
        "filledQtyBatch":
          type: number
          format: decimal
          example: 1
          description: 'Количество исполненных (лоты)'
        "filled":
          type: number
          format: decimal
          example: 1
          description: 'Количество исполненных (лоты)'
        "price":
          type: number
          format: decimal
          example: 208.6
          description: 'Цена'
        "existing":
          type: boolean
          example: true
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
  
    

    "stoporder":
      type: object
      properties:
        "id":
          type: number
          format: decimal
          example: 347498
          description: 'Уникальный идентификатор стоп-заявки'
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "brokerSymbol": 
          type: string
          example: "MOEX:LKOH"
          description: 'Пара Биржа:Тикер'
        "type":
          type: string
          example: "stop"
          description: >
            Тип заявки:
              * `stop` - Стоп-заявка
              * `stoplimit` - Стоп-лимитная заявка
          enum:
            - stop
            - stoplimit
        "stopPrice":
          type: number
          format: decimal
          example: 215
          description: 'Условная цена'
        side: 
          $ref: "#/components/schemas/Side"
        "status":
          $ref: "#/components/schemas/OrderStatus"
        "endTime":
          type: string
          format: date-time
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время действия заявки (UTC)'
        "qty":
          type: number
          format: decimal
          example: 1
          description: 'Количество'
        "filledQtyBatch":
          type: number
          format: decimal
          example: 1
          description: 'Количество исполненных'
        "price":
          type: number
          format: decimal
          example: 208.6
          description: 'Цена(Лимит)'
        "existing":
          type: boolean
          example: true
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'          
    "stoporderWarp":
      type: object
      properties:
        "id":
          type: integer
          format: int64
          example: 347499
          description: 'Уникальный идентификатор стоп-заявки'
        "exchangeOrderId":
          type: integer
          format: int64
          example: 425242362
          description: 'Уникальный идентификатор стоп-заявки'
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "brokerSymbol": 
          type: string
          example: "MOEX:LKOH"
          description: 'Пара Биржа:Тикер'
        "portfolio": 
          type: string
          example: "D39004"
          description: 'Пара Биржа:Тикер'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "type":
          type: string
          example: stop
          description: >
            Тип заявки:
              * `stop` - Стоп-заявка
              * `stoplimit` - Стоп-лимитная заявка
          enum:
            - stop
            - stoplimit
        side: 
          $ref: "#/components/schemas/Side"
        "condition":
          $ref: "#/components/schemas/Condition"
        "status":
          $ref: "#/components/schemas/OrderStatus"
        "transTime":
          type: string
          format: date-time
          example: "2020-05-16T23:59:59.9990000"
          description: 'Время выставления заявки (UTC)'
        "endTime":
          type: string
          format: date-time
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время действия заявки (UTC)'
        "qtyUnits":
          type: number
          format: decimal
          example: 10
          description: 'Количество (Штуки)'
        "qtyBatch":
          type: number
          format: decimal
          example: 1
          description: 'Количество (Лоты)'
        "qty":
          type: number
          format: decimal
          example: 1
          description: 'Количество (Лоты)'
        "price":
          type: number
          format: decimal
          example: 208.6
          description: 'Цена(Лимит)'
        "avg_price":
          type: number
          format: decimal
          example: 0
          description: 'Средняя цена'
        "stopPrice":
          type: number
          format: decimal
          example: 215
          description: 'Условная цена'
        "existing":
          type: boolean
          example: true
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "history_object":
      type: object
      properties:
        "time": 
          type: integer
          format: int64
          example: 1532944740
          description: 'Время (UTC) (Unix time seconds)'
        "close":
          type: number
          format: decimal
          example: 210.83
          description: 'Цена при закрытии'
        "open":
          type: number
          format: decimal
          example: 210.82
          description: 'Цена при открытии'
        "high":
          type: number
          format: decimal
          example: 210.83
          description: 'Максимальная цена'
        "low":
          type: number
          format: decimal
          example: 210.68
          description: 'Миниимальная цена'
        "volume":
          type: integer
          format: int32
          example: 1944
          description: 'Объём'
    "summary":
      type: object
      properties:
        "buyingPowerAtMorning": 
          type: number
          format: decimal
          example: 439844.15
          description: 'Покупательская способность на утро'
        "buyingPower": 
          type: number
          format: decimal
          example: 452404.0
          description: 'Покупательская способность'
        "profit": 
          type: number
          format: decimal
          example: 12560.0
          description: 'Прибыль за сегодня'
        "profitRate": 
          type: number
          format: decimal
          example: 1.93
          description: 'Норма прибыли, %'
        "portfolioEvaluation": 
          type: number
          format: decimal
          example: 651717.0
          description: 'Ликвидный портфель'
        "portfolioLiquidationValue": 
          type: number
          format: decimal
          example: 651717.0
          description: 'Оценка портфеля'
        "initialMargin": 
          type: number
          format: decimal
          example: 199313.0
          description: 'Маржа'
        "riskBeforeForcePositionClosing": 
          type: number
          format: decimal
          example: 552061.0
          description: 'Риск до закрытия'
        "commission":
          type: number
          format: decimal
          example: 24.21
          nullable: true
          description: "Суммарная комиссия (null для Срочного рынка)"
    "position":
      type: object
      properties:
        "symbol": 
          type: string
          example: "LKOH"
          description: 'Тикер (Код финансового инструмента)'
        "brokerSymbol": 
          type: string
          example: "MOEX:LKOH"
          description: 'Пара Биржа:Тикер'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "volume": 
          type: number 
          format: decimal
          example: 38767080.0
          description: 'Объём, расчитанный по средней цене'
        "currentVolume": 
          type: number 
          format: decimal
          example: 38798790.0
          description: 'Объём, расчитанный по текущей цене'
        "avgPrice":
          type: number
          format: decimal
          example: 16.6
          description: 'Средняя цена'
        "qtyUnits":
          type: number
          format: decimal
          example: 20.0
          description: 'Количество (штуки)'
        "openUnits":
          type: number
          format: decimal
          example: 30.0
          description: 'Количество открытых позиций на момент открытия (начала торгов)'
        "lotSize":
          type: number
          format: decimal
          example: 1
          description: 'Размер лота'
        "shortName":
          type: string
          example: "ЛУКОЙЛ"
          description: 'Короткое наименование'
        "qtyT0":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество T0 (штуки)' 
        "qtyT1":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество T1 (штуки)'
        "qtyT2":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество T2 (штуки)'
        "qtyTFuture":
          type: number
          format: decimal
          example: 20.0
          description: 'Количество (штуки)'
        "qtyT0Batch":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество T0 (лоты)'
        "qtyT1Batch":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество T1 (лоты)'
        "qtyT2Batch":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество T2 (лоты)'
        "qtyTFutureBatch":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество TFuture (лоты)'
        "qtyBatch":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество TFuture'
        "openQtyBatch":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество на момент открытия (начала торгов) (лоты)'
        "qty":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество (лоты)'
        "open":
          type: number
          format: decimal
          example: 20.0
          description: 'Агрегированное количество на момент открытия (начала торгов) (штуки)'
        "unrealisedPl":
          type: number
          format: decimal
          example: 3250.0
          description: ''
        "isCurrency":
          type: boolean
          example: false
          description: 'True для валютных остатков (денег), false - для торговых инструментов'
    "fortsrisk":
      type: object
      properties:
        "portfolio": 
          type: string
          example: "D49004"
          description: 'Идентификатор клиентского портфеля'
        "moneyFree": 
          type: number
          format: decimal
          example: 452404.0
          description: 'Свободные средства. Сумма рублей и залогов, дисконтированных в рубли, доступная для открытия позиций. (MoneyFree = MoneyAmount + VmInterCl – MoneyBlocked – VmReserve – Fee)'
        "moneyBlocked": 
          type: number
          format: decimal
          example: 12560.0
          description: 'Средства, заблокированные под ГО'
        "balanceMoney": 
          type: number
          format: decimal
          example: 1.93
          description: 'Сальдо денежных торговых переводов за текущую сессию (поле будет удалено в будущих обновлениях)'
          deprecated: true
        "fee": 
          type: number
          format: decimal
          example: 651717.0
          description: 'Списанный сбор'
        "moneyOld": 
          type: number
          format: decimal
          example: 651717.0
          description: 'Общее количество рублей и дисконтированных в рубли залогов на начало сессии'
        "moneyAmount": 
          type: number
          format: decimal
          example: 199313.0
          description: 'Общее количество рублей и дисконтированных в рубли залогов'
        "moneyPledgeAmount": 
          type: number
          format: decimal
          example: 552061.0
          description: 'Сумма залогов, дисконтированных в рубли'
        "vmInterCl": 
          type: number
          format: decimal
          example: 651717.0
          description: 'Вариационная маржа, списанная или полученная в пром. клиринг'
        "vmCurrentPositions": 
          type: number
          format: decimal
          example: 199313.0
          description: 'Сагрегированная вармаржа по текущим позициям'
        "varMargin": 
          type: number
          format: decimal
          example: 552061.0
          description: 'VmCurrentPositions + VmInterCl'
        "isLimitsSet": 
          type: boolean
          example: false
          description: 'Наличие установленных денежного и залогового лимитов'
    "risk":
      type: object
      properties:
        "portfolio": 
          type: string
          example: "D49004"
          description: 'Идентификатор клиентского портфеля'
        exchange:
          $ref: "#/components/schemas/Exchange"
        "portfolioEvaluation": 
          type: number
          format: decimal
          example: 646270.9
          description: 'Общая стоимость портфеля'
        "portfolioLiquidationValue": 
          type: number
          format: decimal
          example: 646270.9
          description: 'Стоимость ликвидного портфеля'
        "initialMargin": 
          type: number
          format: decimal
          example: 15752.115
          description: 'Начальная маржа'
        "minimalMargin": 
          type: number
          format: decimal
          example: 65177.0575
          description: 'Минимальная маржа'
        "correctedMargin": 
          type: number
          format: decimal
          example: 15752.115
          description: 'Скорректированная маржа'
        "riskCoverageRatioOne": 
          type: number
          format: decimal
          example: 630518.785
          description: 'НПР1'
        "riskCoverageRatioTwo": 
          type: number
          format: decimal
          example: 638394.8425
          description: 'НПР2'
        "riskCategoryId":
          $ref: "#/components/schemas/RiskCategoryId"
        "clientType":
          $ref: "#/components/schemas/ClientType"
        "hasForbiddenPositions": 
          type: boolean
          example: false
          description: 'Имеются ли запретные позиции'
        "hasNegativeQuantity": 
          type: boolean
          example: false
          description: 'Имеются ли отрицательные количества'
    "alltrade":
      type: object
      properties: 
        id:
          type: integer
          format: int64
          example: 159
          description: 'Уникальный идентификатор.'
        orderno:
          type: integer
          format: int64
          example: 0
          description: 'Идентификатор заявки'
        symbol:
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента). "[N/A]" используется если symbol не определен.'
        qty:
          type: integer
          format: int32
          example: 1
          description: 'Количество'
        price:
          type: number
          format: decimal
          example: 142.52
          description: 'Цена'
        time:
          type: string
          format: date-time
          example: "2018-08-07T08:40:03.445Z"
          description: 'Дата и время (UTC) закрытия заявки'
        timestamp:
          type: integer
          format: int64
          example: 1611158710768
          description: 'Время (UTC) в формате Unix Time Milliseconds'
        side: 
          $ref: "#/components/schemas/Side"
        "oi":
          type: integer
          format: int32
          example: 523920
          description: 'Открытый интерес (open interest). Если не поддерживается инстурментом - значение 0.'
        existing:
          type: boolean
          example: false
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "security":
      type: object
      properties:
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "shortname":
          type: string
          example: "Сбербанк"
          description: 'Краткое наименование инструмента'
        "description":
          type: string
          example: "Сбербанк России ПАО ао"
          description: 'Краткое описание инструмента'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "type":
          type: string
          example: "CS"
          description: 'Тип'
          nullable: true
        "lotsize":
          type: number
          format: decimal
          example: 1.0
          description: 'Размер лота'
        "facevalue":
          type: number
          format: decimal
          example: 100.0
          description: 'Номинальная стоимость'
        "cfiCode":
          type: string
          example: "ESXXXX"
          description: 'Тип ценной бумаги согласно стандарту ISO 10962'
        "cancellation":
          type: string
          example: "2018-09-03T00:00:00"
          description: "Дата и время (UTC) окончания действия"
        "minstep":
          type: number
          format: decimal
          example: 0.01
          description: "Минимальный шаг цены"
        "rating":
          type: number
          format: decimal
          example: 195613886.0
          description: ""
        "marginbuy":
          type: number
          format: decimal
          example: 6707.86
          description: "Цена маржинальной покупки (заемные средства)"
        "marginsell":
          type: number
          format: decimal
          example: 6707.86
          description: "Цена маржинальной продажи (заемные средства)"
        "marginrate":
          type: number
          format: decimal
          example: 89.3428
          description: "Отношение цены маржинальной покупки к цене последней сделки"
        "pricestep":
          type: number
          format: decimal
          example: 6.30202
          description: "Минимальный шаг цены, выраженный в рублях"
        "priceMax":
          type: number
          format: decimal
          example: 79.57
          description: "Максимальная цена"
        "priceMin":
          type: number
          format: decimal
          example: 70.55
          description: "Минимальная цена"
        "theorPrice":
          type: number
          format: decimal
          example: 0.0
          description: "Теоретическая цена опциона"
        "theorPriceLimit":
          type: number
          format: decimal
          example: 0.0
          description: "Теоретическая цена опциона с учетом лимитов"
        "volatility":
          type: number
          format: decimal
          example: 0.0
          description: "Волатильность"
        "currency":
          type: string
          example: "RUB"
          nullable: true
          description: "Валюта"
        "ISIN":
          type: string
          nullable: true
          example: "RU000A1014L8"
          description: "Идентификатор ценной бумаги согласно стандарту ISO 6166"
        "yield":
          type: integer
          format: int32
          nullable: true
          example: null
          description: ""
        "primary_board":
          type: string
          example: "ROPD"
          description: "Код режима торгов"
        "tradingStatus":
          $ref: "#/components/schemas/TradingStatus"
        "tradingStatusInfo":
          type: string
          example: "нормальный период торгов"
          description: "Описание торгового статуса инструмента"
          nullable: true
        "complexProductCategory":
          $ref: "#/components/schemas/ComplexProductCategory"
    "riskRate":
      type: object
      properties:
        "id": 
          type: integer
          format: int64
          example: 22229
          description: 'Id записи'
        "instrument": 
          type: string
          example: 'SBERP'
          description: 'Инструмент'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "riskCategoryId":
          $ref: "#/components/schemas/RiskCategoryId"
        "securityRiskCategoryId":
          type: number
          format: decimal
          nullable: true
          example: 1
          description: 'Id категории бумаги для категоризации. '
        "assetType": 
          type: string
          example: 'stock'
          description: 'Тип актива'
        "underlyingAsset": 
          type: string
          example: 'SBER'
          nullable: true
          description: 'Чаще всего будет null. Поле показывает к какому базовому инструменту принадлежит данный инструмент.'
        "setName": 
          type: string
          example: 'SBER'
          nullable: true
          description: 'Чаще всего будет null. Поле показывает к множеству инструменту принадлежит данный инструмент.'
        "isDirect": 
          type: boolean
          example: false
          description: 'Является ли зависимость инструмента к базовому активу прямой или обратной.'
        "isin": 
          type: string
          example: 'RU0009029557'
          description: 'ISIN инструмента. Если есть.'
        "currencyCode":
          type: string
          example: 'RUB'
          description: "Код валюты расчетов"
        "rateUp":
          type: number
          format: decimal
          example: 20
          description: "Ставка риска повышения цены. Применяется для шортов."
        "rateDown":
          type: number
          format: decimal
          example: 10
          description: "Ставка риска понижения цены. Применяется для лонгов."
        "rateSymmetric":
          type: number
          format: decimal
          example: 10
          description: "Симметричная ставка риска. Приведена для справки, не используется"
        "isShortSellPossible":
          type: boolean
          example: true
          description: "Разрешен ли шорт по бумаге. True если да."
        "isMarginal":
          type: boolean
          example: true
          description: "Доступен ли данный инструмент в маржу. Т.е. есть ли он в списке маржинальных инструментов брокера."
        "setRate":
          type: number
          format: decimal
          example: 0
          description: "Ставка риска множества"
        "createdAt":  
          type: string
          example: "2021-08-24T10:13:01.6584899"
          description: "Время добавления ставки риска"
        "updatedAt":  
          type: string
          format: date-time
          example: "2021-10-13T16:01:42.7957367"
          description: "Время последнего обновления ставки риска"
    "time": 
      type: integer
      format: int64
      example: 1532944071
      description: 'Текущее время (UTC) в формате Unix time seconds'
    "trade":
      type: object
      properties: 
        "id":
          type: number
          format: decimal
          example: 159
          description: 'Уникальный идентификатор сделки'
        "orderno":
          type: string
          example: 7271479
          description: 'Идентификатор заявки'
        "symbol":
          type: string
          example: "GAZP"
          description: 'Тикер (Код финансового инструмента). "[N/A]" используется если symbol не определен.'
        "brokerSymbol":
          type: string
          example: "GAZP:MOEX"
          description: 'Пара Биржа:Тикер'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "date":
          type: string
          format: date-time
          example: "2018-08-07T08:40:03.445Z"
          description: 'Дата и время (UTC) закрытия заявки'
        "board":
          type: string
          example: "TQBR"
          description: 'Код режима торгов'
        "qtyUnits":
          type: integer
          format: int32
          example: 1
          description: 'Количество (штуки)'        
        "qtyBatch":
          type: integer
          format: int32
          example: 1
          description: 'Количество (лоты)'        
        "qty":
          type: integer
          format: int32
          example: 1
          description: 'Количество (лоты)'
        "price":
          type: number
          format: decimal
          example: 142.52
          description: 'Цена'
        side: 
          $ref: "#/components/schemas/Side"
        "existing":
          type: boolean
          example: false
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
   
        
    ws_res_OrderBookGetAndSubscribe:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/orderbook'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_BarsGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          properties:
            "time": 
              type: integer
              format: int64
              example: 1620220020
              description: 'Время (UTC) (Unix time seconds)'
            "close":
              type: number
              format: decimal
              example: 210.83
              description: 'Цена при закрытии'
            "open":
              type: number
              format: decimal
              example: 210.82
              description: 'Цена при открытии'
            "high":
              type: number
              format: decimal
              example: 210.83
              description: 'Максимальная цена'
            "low":
              type: number
              format: decimal
              example: 210.68
              description: 'Минимальная цена'
            "volume":
              type: integer
              format: int32
              example: 1944
              description: 'Объём'
          description: 'Сообщение с данными о ценах на рынке (свечи)'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_QuotesSubscribe:
       type: object
       properties:
        "data":
          type: object          
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
            "description":
              type: string
              example: "Сбербанк России ПАО ао"
              description: 'Короткое описание на русском языке'
            "ask":
              type: number
              format: decimal
              example: 303.65
              description: 'Аск'
            "bid":
              type: number
              format: decimal
              example: 303.59
              description: 'Бид'
            "prev_close_price":
              type: number
              format: decimal
              example: 303.7
              description: 'Цена предыдущего закрытия'
            "last_price": 
              type: number
              format: decimal
              example: 303.59
              description: 'Последняя цена'
            "last_price_timestamp": 
              type: integer
              format: int64
              example: 1620221538
              description: 'Время последней цены (UTC)'
            "change": 
              type: number
              format: decimal
              example: -0.11
              nullable: true
              description: 'Разность цены и цены предыдущего закрытия'
            "change_percent": 
              type: number
              format: decimal
              example: -0.04
              nullable: true
              description: 'Относительное изменение цены'
            "high_price": 
              type: number
              format: decimal
              example: 305
              description: 'Максимальная цена'
            "low_price": 
              type: number
              format: decimal
              example: 302.71
              description: 'Минимальная цена'
            "accruedInt":
              type: number
              format: decimal
              example: 0
              nullable: true
              description: 'Начислено (НКД)'
            "accrued_interest":
              type: number
              format: decimal
              example: 0
              nullable: true
              deprecated: true
              description: 'Начислено (НКД)'
            "volume": 
              type: number 
              format: decimal
              example: 38767080.0
              description: 'Объём'
            "open_price": 
              type: number
              format: decimal
              example: 304.01
              description: 'Цена открытия'
            "yield": 
              type: integer
              format: int32
              nullable: true
              example: null
              description: ""
            "lotsize": 
              type: number
              format: decimal
              example: 10.0
              description: 'Размер лота'
            "lotvalue": 
              type: number
              format: decimal
              example: 3035.9
              description: ""
            "facevalue": 
              type: number
              format: decimal
              example: 3
              description: ""
            "type": 
              type: string
              example: "CS"
              description: ""
              nullable: true
        "guid":
          description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
          type: string
          example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_PositionsGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          properties:
            "symbol": 
              type: string
              example: "AFLT"
              description: 'Тикер (Код финансового инструмента)'
            "brokerSymbol": 
              type: string
              example: "MOEX:AFLT"
              description: 'Биржа:Тикер'
            "exchange":
              $ref: "#/components/schemas/Exchange"
            "volume": 
              type: number 
              format: decimal
              example: 38767080.0
              description: 'Объём, расчитанный по средней цене'
            "currentVolume": 
              type: number 
              format: decimal
              example: 38798790.0
              description: 'Объём, расчитанный по текущей цене'
            "avgPrice":
              type: number
              format: decimal
              example: 82.30
              description: 'Средняя цена сделок по позициям'
            "qtyUnits":
              type: integer
              format: int32
              example: -10.00
              description: 'Количество (штуки)'
            "openUnits":
              type: integer
              format: int32
              example: -10.00
              description: 'Позиций на момент открытия (штуки)'
            "lotSize":
              type: number
              format: decimal
              example: 10.00
              description: 'Размер лота'
            "shortName": 
              type: string
              example: "Аэрофлот"
              description: 'Наименование инструмента'
            "qtyT0":
              type: integer
              format: int32
              example: 0.00
              description: 'Количество на дату "Т0" (штуки)'
            "qtyT1":
              type: integer
              format: int32
              example: -10.00
              description: 'Количество на дату "Т1" (штуки)'
            "qtyT2":
              type: integer
              format: int32
              example: -10.00
              description: 'Количество на дату "Т2" (штуки)'
            "qtyTFuture":
              type: integer
              format: int32
              example: -10.00
              description: 'Количество на дату "TFuture" (штуки)'
            "qtyT0Batch":
              type: integer
              format: int32
              example: 0.00
              description: 'Количество на дату "Т0" (лоты)'
            "qtyT1Batch":
              type: integer
              format: int32
              example: -1.00
              description: 'Количество на дату "Т1" (лоты)'
            "qtyT2Batch":
              type: integer
              format: int32
              example: -1.00
              description: 'Количество на дату "Т2" (лоты)'
            "qtyTFutureBatch":
              type: integer
              format: int32
              example: -1.00
              description: 'Количество на дату "TFuture" (лоты)'
            "qtyBatch":
              type: integer
              format: int32
              example: -1.00
              description: 'Количество (лоты)'
            "openQtyBatch":
              type: integer
              format: int32
              example: -1.00
              description: 'Позиции на момент открытия (начала торгов)'
            "qty":
              type: integer
              format: int32
              example: -1.00
              description: 'Количество (лоты)'
            "open":
              type: integer
              format: int32
              example: -1.00
              description: 'Позиции на момент открытия (начала торгов)'
            "dailyUnrealisedPl":
              type: number
              format: decimal
              example: 2.80
              description: 'Нереализованная прибыль за день'
            "unrealisedPl":
              type: number
              format: decimal
              example: 2.80
              description: 'Нереализованная прибыль'
            "isCurrency":
              type: boolean
              example: false
              description: 'True для валютных остатков (денег), false - для торговых инструментов'
          description: 'Сообщение с данными о позициях по ценным бумагам и валютным остаткам'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_TradesGetAndSubscribe:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/trade'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_SummariesGetAndSubscribeV2:
      type: object
      properties: 
        "data":
          type: object
          properties: 
            "buyingPowerAtMorning":
              type: number
              format: decimal
              example: 5410.89
              description: 'Покупательская способность (на утро)'
            "buyingPower":
              type: number
              format: decimal
              example: 5418.27
              description: 'Покупательская способность'
            "profit":
              type: number
              format: decimal
              example: 93.0
              description: 'Прибыль'
            "profitRate":
              type: number
              format: decimal
              example: 0.87
              description: 'Относительная прибыль'
            "portfolioEvaluation":
              type: number
              format: decimal
              example: 8857.0
              description: 'Ликвидный портфель'
            "portfolioLiquidationValue":
              type: number
              format: decimal
              example: 10714.0
              description: 'Оценка портфеля'
            "initialMargin":
              type: number
              format: decimal
              example: 3539.0
              description: 'Начальная маржа'
            "riskBeforeForcePositionClosing":
              type: number
              format: decimal
              example: 7088.0
              description: 'Риск до закрытия'
            "commission":
              type: number
              format: decimal
              example: 24.21
              nullable: true
              description: "Суммарная комиссия (null для Срочного рынка)"
          description: 'Сообщение с данными о позициях по деньгам'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_RisksGetAndSubscribe:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/risk'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_SpectraRisksGetAndSubscribe:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/fortsrisk'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_StopOrdersGetAndSubscribe:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/stoporder'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_StopOrdersGetAndSubscribeWarp:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/stoporderWarp'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_OrdersGetAndSubscribe:
      type: object
      properties: 
        "data":
          $ref: '#/components/schemas/order'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_HandledSuccessfully:
      type: object
      properties: 
        "message":
          type: string
          example: "Handled successfully"
          description: "Информация по созданной/отменённой подписке"
        "httpCode":
          type: integer
          format: int32
          example: 200
          description: "HTTP-код ответа"
        "requestGuid":
           description: 'Уникальный идентификатор подписки. Значение во входящем сообщении равно значению поля \"guid\", переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    
    ws_req_OrderBookGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum:
            - "OrderBookGetAndSubscribe"
          example: "OrderBookGetAndSubscribe"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           $ref: "#/components/schemas/Exchange"       
        "depth":
           description: 'Глубина стакана. Стандартное и максимальное значение - 20 (20х20).'
           type: integer
           format: int32
           example: 10
           maximum: 20
           default: 20
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
    ws_req_BarsGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum:
            - "BarsGetAndSubscribe"
          example: "BarsGetAndSubscribe"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "tf":
           description: 'Длительность таймфрейма в секундах или код ("D" - дни, "W" - недели, "M" - месяцы, "Y" - годы)'
           type: string   
           enum: 
             - 15
             - 60
             - 300
             - 3600
             - "D"
             - "W"
             - "M"
             - "Y"
           example: 60
        "from":
           description: 'Дата и время (UTC) для первой запрашиваемой свечи'
           type: integer
           format: int64
           example: 1536557084
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "delayed":
           description: 'Данные c задержкой в 15 минут. Для авторизованых клиентов задержка не применяется.'
           type: boolean
           example: false
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_QuotesSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          enum:
            - "QuotesSubscribe"
          example: "QuotesSubscribe"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
    ws_req_PositionsGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "PositionsGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D39004'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_TradesGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "TradesGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_AllTradesGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "AllTradesGetAndSubscribe"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "depth":
           description: 'Если указать, то перед актуальными данными придут данные о последних N сделках.'
           type: integer
           format: int32
           example: 50
           maximum: 5000
        "includeVirtualTrades":
           description: 'Указывает, нужно ли отправлять виртуальные (индикативные) сделки'
           type: boolean
           example: false
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_SummariesGetAndSubscribeV2:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "SummariesGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_RisksGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          example: "RisksGetAndSubscribe"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_SpectraRisksGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "SpectraRisksGetAndSubscribe"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: '7500PUQ'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_StopOrdersGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "StopOrdersGetAndSubscribe"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D39004'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_StopOrdersGetAndSubscribeV2:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "StopOrdersGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D39004'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_OrdersGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "OrdersGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "orderStatuses":
           description: 'Опциональный фильтр по статусам заявок. Влияет только на фильтрацию первичных исторических данных при подписке'
           type: array
           items: 
             $ref: '#/components/schemas/OrderStatus'
    ws_req_InstrumentsGetAndSubscribeV2:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "InstrumentsGetAndSubscribeV2"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           $ref: "#/components/schemas/Exchange"
        "format":
           $ref: "#/components/schemas/Format"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_Unsubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "unsubscribe"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "guid":
           description: 'Уникальный идентификатор подписки, от которой отписываемся.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    estimateOrderModel:
      type: object
      properties:
        portfolio:
          type: string
          description: Портфель клиента
          nullable: true
        ticker:
          type: string
          description: Инструмент
          nullable: true
        exchange:
          $ref: "#/components/schemas/Exchange"
        quantityToSell:
          type: number
          description: Количество в лотах к продаже с плечом
          format: decimal
        quantityToBuy:
          type: number
          description: Количество в лотах к покупке с плечом
          format: decimal
        notMarginQuantityToSell:
          type: number
          description: Количество в лотах к продаже без плеча
          format: decimal
        notMarginQuantityToBuy:
          type: number
          description: Количество в лотах к покупке без плеча
          format: decimal
        orderEvaluation:
          type: number
          description: Стоимость заявки
          format: decimal
        commission:
          type: number
          description: Комиссия
          format: decimal
      additionalProperties: false
      description: Модель результата оценки стоимости и количества в лотах
    estimateOrderViewModel:
      type: object
      properties:
        portfolio:
          type: string
          description: Портфель клиента
          nullable: true
        ticker:
          type: string
          description: Инструмент
          nullable: true
        exchange:
          type: string
          description: Биржа
          nullable: true
        price:
          type: number
          description: Цена
          format: decimal
        lotQuantity:
          type: integer
          description: Количество лотов
          format: int64
        board:
          type: string
          description: Режим торгов (борд)
          nullable: true
      additionalProperties: false
      description: Модель заявки для оценки стоимости и количества в лотах

    commandws_res_Authorize:
      type: object
      properties: 
        "requestGuid":
           description: 'Уникальный идентификатор подписки. Значение во входящем сообщении равно значению поля \"guid\", переданному при отправке команды.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "httpCode":
          type: integer
          format: int32
          example: 200
          description: "HTTP-код ответа"
        "message":
          type: string
          example: "The connection has been initialized."
          description: "Информация об инициализации токена."
    commandws_res_HandledSuccessfully:
      type: object
      properties: 
        "requestGuid":
           description: 'Уникальный идентификатор подписки. Значение во входящем сообщении равно значению поля \"guid\", переданному при отправке команды.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "httpCode":
          type: integer
          format: int32
          example: 200
          description: "HTTP-код ответа"
        "message":
          type: string
          example: "An order '12345' has been created."
          description: "Информация о результате выполнения команды"
    commandws_res_badrequest:
      type: object
      properties: 
        "requestGuid":
           description: 'Уникальный идентификатор подписки. Значение во входящем сообщении равно значению поля \"guid\", переданному при отправке команды.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "httpCode":
          type: integer
          format: int32
          example: 400
        "message":
          type: string
          example: "Invalid or unsupported quantity"
          description: 'Информация об ошибке'


    commandws_req_Authorize:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "authorize"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
          nullable: true
        "token":
          description: 'JWT токен для авторизации'
          type: string
          example: 'eyJhbGciOiJ...'
    commandws_req_CreateMarketOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "create:market"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_CreateLimitOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "create:limit"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "price":
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "timeInForce":
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: number
          format: decimal
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
          nullable: true
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
          nullable: true
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_CreateStopOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "create:stop"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "condition":
          $ref: "#/components/schemas/Condition"
        "triggerPrice":
          type: number
          format: decimal
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: integer
          format: int64
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
        "activate":
          type: boolean
          default: true
          description: >
            Флаг указывает, создать активную заявку, или не активную.
            Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
            Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
          example: true
    commandws_req_CreateStopLimitOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "create:stopLimit"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "price":
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "condition":
          $ref: "#/components/schemas/Condition"
        "triggerPrice":
          type: number
          format: decimal
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: integer
          format: int64
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "timeInForce":
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: number
          format: decimal
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
          nullable: true
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
          nullable: true
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
        "activate":
          type: boolean
          default: true
          description: >
            Флаг указывает, создать активную заявку, или не активную.
            Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
            Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
          example: true

    commandws_req_UpdateMarketOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "update:market"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_UpdateLimitOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "update:limit"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "price":
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "timeInForce":
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: number
          format: decimal
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
          nullable: true
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
          nullable: true
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_UpdateStopOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "update:stop"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "condition":
          $ref: "#/components/schemas/Condition"
        "triggerPrice":
          type: number
          format: decimal
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: integer
          format: int64
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
        "activate":
          type: boolean
          default: true
          description: >
            Флаг указывает, создать активную заявку, или не активную.
            Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
            Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
          example: true
    commandws_req_UpdateStopLimitOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "update:stopLimit"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "side": 
          $ref: "#/components/schemas/Side"
        "quantity":
          type: integer
          format: int32
          example: 2
          description: 'Количество (лоты)'
        "price":
          type: number
          format: decimal
          example: 190.97
          description: 'Цена'
        "condition":
          $ref: "#/components/schemas/Condition"
        "triggerPrice":
          type: number
          format: decimal
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: integer
          format: int64
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              $ref: "#/components/schemas/Exchange"
        "board":
          type: string
          description: Режим торгов (борд)
          nullable: true
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "timeInForce":
          $ref: "#/components/schemas/TimeInForce"
        "icebergFixed":
          type: number
          format: decimal
          example: 100
          description: 'Видимая постоянная часть айсберг-заявки в лотах'
          nullable: true
        "icebergVariance":
          type: number
          format: decimal
          example: 2
          maximum: 20
          description: 'Амплитуда отклонения (в % от icebergFixed) случайной надбавки к видимой части айсберг-заявки. Только срочный рынок'
          nullable: true
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
        "activate":
          type: boolean
          default: true
          description: >
            Флаг указывает, создать активную заявку, или не активную.
            Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
            Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
          example: true

    commandws_req_DeleteMarketOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "delete:market"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_DeleteLimitOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "delete:limit"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_DeleteStopOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "delete:stop"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
    commandws_req_DeleteStopLimitOrder:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "delete:stopLimit"
        "guid":
          description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
          type: string
          example: 'f35a2373-612c-4518-54af-72025384f59b'
        "orderId":
          type: integer
          format: int64
          example: 18936040296
          description: 'Идентификатор заявки'
        "exchange":
          $ref: "#/components/schemas/Exchange"
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "checkDuplicates":
          type: boolean
          example: true
          description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен.'
